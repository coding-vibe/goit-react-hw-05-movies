{"version":3,"file":"static/js/202.8e33f957.chunk.js","mappings":"0PAGaA,EAAMC,EAAAA,GAAAA,OAAH,wKAWHC,EAAYD,EAAAA,GAAAA,IAAH,qHAOTE,EAAaF,EAAAA,GAAAA,EAAH,6DAKVG,EAAQH,EAAAA,GAAAA,EAAH,6DAKLI,EAAaJ,EAAAA,GAAAA,GAAH,kGAOVK,EAAUL,EAAAA,GAAAA,IAAH,uGAMPM,GAAUN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,mM,SCYpB,EApDqB,WAAO,IAAD,IAClBQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WAQTC,MAAM,sCAAD,OAAuCV,EAAvC,mBAPW,CACfW,OAAQ,MACRC,QAAS,CACRC,OAAQ,mBACRC,cAAe,gOAIfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GAAQ,OAAIZ,EAASY,EAAb,IACbE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACX,GAAE,CAACnB,IAEJ,IAAMsB,EAAY,oBAAGjB,EAASkB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACC,iCACC,SAACjC,EAAD,CAAKkC,KAAK,SAASC,QAAS,kBAAMnB,EAASe,EAAf,EAA5B,SAA0D,eAC1D,UAAC7B,EAAD,YACC,gBACCkC,IAAG,iDAAqCxB,QAArC,IAAqCA,OAArC,EAAqCA,EAAOyB,aAC/CC,IAAI,YAEL,4BACC,SAACnC,EAAD,iBAAaS,QAAb,IAAaA,OAAb,EAAaA,EAAO2B,SACpB,yBAAG,gBAAoC,IAAjB,OAAL3B,QAAK,IAALA,OAAA,EAAAA,EAAO4B,eAAmBC,QAAQ,GAAG,QACtD,SAACrC,EAAD,UAAO,cACP,8BAAIQ,QAAJ,IAAIA,OAAJ,EAAIA,EAAO8B,YAEX,SAACtC,EAAD,UAAO,YACP,SAACC,EAAD,WACO,OAALO,QAAK,IAALA,OAAA,EAAAA,EAAO+B,SAAU/B,EAAM+B,OAAOC,KAAI,SAAAC,GAAK,OACvC,wBAAoBA,EAAMC,MAAjBD,EAAME,GADwB,aAK3C,SAAC3C,EAAD,UAAO,4BACP,UAACE,EAAD,YACC,SAACC,EAAD,CAASyC,GAAE,kBAAavC,EAAb,SAA6BuB,MAAO,CAAEC,KAAMnB,EAASkB,MAAMC,MAAtE,SAA8E,UAC9E,SAAC1B,EAAD,CAASyC,GAAE,kBAAavC,EAAb,YAAgCuB,MAAO,CAAEC,KAAMnB,EAASkB,MAAMC,MAAzE,SAAiF,gBAElF,SAAC,KAAD,MAGF,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Btn = styled.button`\nmargin-bottom: 10px;\n\nborder:none;\nborder-radius: 4px;\nbox-shadow: 0px 0px 2px 2px rgb(0,0,0);\n\nbackground-color: #0a0a23;\ncolor: #fff;\n`\n\nexport const MovieWrap = styled.div`\ndisplay: flex;\ncolumn-gap: 15px;\npadding-bottom: 15px;\n\nborder-bottom: 1px solid black;\n`\nexport const MovieTitle = styled.p`\nfont-size: 20px;\nfont-weight: 700;\n`\n\nexport const Title = styled.p`\nfont-size: 18px;\nfont-weight: 500;\n`\n\nexport const GenresList = styled.ul`\ndisplay: flex;\ncolumn-gap: 10px;\npadding-left: 0px;\nlist-style: none;\n`\n\nexport const NavWrap = styled.div`\npadding-left: 15px;\npadding-bottom: 20px;\n\nborder-bottom: 1px solid black;\n`\nexport const NavItem = styled(NavLink)`\npadding: 5px;\nborder-radius: 4px;\n\nfont-size: 12px;\ntext-decoration: none;\n\ncolor: #ff2163;\n\n&.active {\n\t\tbackground-color: #ff2163;\n\t\tcolor: white;\n\t}\n\t`\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, useNavigate, Outlet } from 'react-router-dom';\nimport { Btn, MovieWrap, MovieTitle, NavWrap, Title, GenresList, NavItem } from './MovieDetails.styled.js';\n\nconst MovieDetails = () => {\n\tconst { movieId } = useParams()\n\tconst [movie, setMovie] = useState({})\n\tconst location = useLocation()\n\tconst navigate = useNavigate()\n\tuseEffect(() => {\n\t\tconst options = {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\taccept: 'application/json',\n\t\t\t\tAuthorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlNmExMDMxYmJjZWU5ZmNkMWY4ZjFkNGJjOTMxZGE4NiIsInN1YiI6IjY0N2RkNGZjMGZiMzk4MDBkZTY4M2M4NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WR5ImVQ8amW7G2J-1UuzSgjjmqHqiLGhyWoZyb9un5Y'\n\t\t\t}\n\t\t}\n\t\tfetch(`https://api.themoviedb.org/3/movie/${movieId}?language=en-US`, options)\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => setMovie(response))\n\t\t\t.catch(err => console.error(err));\n\t}, [movieId])\n\t\n\tconst backLinkHref = location.state?.from ?? \"/\";\n\n\treturn (\n\t\t<>\n\t\t\t<Btn type=\"button\" onClick={() => navigate(backLinkHref)}> Go back </Btn>\n\t\t\t<MovieWrap>\n\t\t\t\t<img\n\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w200/${movie?.poster_path}`}\n\t\t\t\t\talt=\"poster\"\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\t<MovieTitle>{movie?.title}</MovieTitle>\n\t\t\t\t\t<p>User score: {(movie?.vote_average * 10).toFixed(0)}%</p>\n\t\t\t\t\t<Title>Overview</Title>\n\t\t\t\t\t<p>{movie?.overview}</p>\n\t\t\t\t\t\n\t\t\t\t\t<Title>Genres</Title>\n\t\t\t\t\t<GenresList>\n\t\t\t\t\t\t{movie?.genres && movie.genres.map(genre => (\n\t\t\t\t\t\t\t<li key={genre.id}>{genre.name}</li>))}\n\t\t\t\t\t</GenresList>\n\t\t\t\t</div>\n\t\t\t</MovieWrap>\n\t\t\t<Title>Additional information</Title>\n\t\t\t<NavWrap>\n\t\t\t\t<NavItem to={`/movies/${movieId}/cast`} state={{ from: location.state.from }}>Cast</NavItem>\n\t\t\t\t<NavItem to={`/movies/${movieId}/reviews`} state={{ from: location.state.from }}>Reviews</NavItem>\n\t\t\t</NavWrap>\n\t\t\t<Outlet />\n\t\t</>\n\t);\n}\n\nexport default MovieDetails;"],"names":["Btn","styled","MovieWrap","MovieTitle","Title","GenresList","NavWrap","NavItem","NavLink","movieId","useParams","useState","movie","setMovie","location","useLocation","navigate","useNavigate","useEffect","fetch","method","headers","accept","Authorization","then","response","json","catch","err","console","error","backLinkHref","state","from","type","onClick","src","poster_path","alt","title","vote_average","toFixed","overview","genres","map","genre","name","id","to"],"sourceRoot":""}