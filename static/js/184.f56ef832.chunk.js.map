{"version":3,"file":"static/js/184.f56ef832.chunk.js","mappings":"mOA2DA,EAxDe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVJ,GAA0B,OAAVA,EAApB,CAUIK,MAAM,mDAAD,OAAoDL,EAApD,8CAPO,CACdM,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAIVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GACFf,EAAUe,EAASE,QACtB,IACFC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GAbb,CAcJ,GAAE,CAACf,IAWJ,OACE,iBAAKkB,GAAG,KAAR,WACE,kBAAMC,SAXc,SAAAC,GACtBA,EAAEC,iBAC4B,KAA1BD,EAAEE,OAAOC,OAAOC,QAGpBzB,EAAgB,CAAEC,MAAOoB,EAAEE,OAAOC,OAAOC,QAEzCJ,EAAEE,OAAOG,QACV,EAGG,WACE,kBAAOC,KAAK,OAAOC,KAAK,YACxB,mBAAQD,KAAK,SAAb,SAAsB,eAExB,wBACG/B,GACCA,EAAOiC,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,GAAGC,YACxBC,MAAO,CAAEC,KAAMhC,GAFjB,SAIG2B,EAAMM,SALFN,EAAME,GADD,QAazB,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams, NavLink, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null)\n  const [searchParams, setSearchParams] = useSearchParams()\n  const query = searchParams.get('query')\n  const location = useLocation()\n  useEffect(() => {\n    if (query === '' || query === null) {\n      return;\n      }\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlNmExMDMxYmJjZWU5ZmNkMWY4ZjFkNGJjOTMxZGE4NiIsInN1YiI6IjY0N2RkNGZjMGZiMzk4MDBkZTY4M2M4NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WR5ImVQ8amW7G2J-1UuzSgjjmqHqiLGhyWoZyb9un5Y'\n      }\n    }\n        fetch(`https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options)\n            .then(response => response.json())\n            .then(response => {\n                setMovies(response.results);\n            })\n          .catch(err => console.error(err));\n  }, [query]);\n    \n    const searchHandler = e => {\n    e.preventDefault();\n    if (e.target.search.value === '') {\n      return;\n    }\n    setSearchParams({ query: e.target.search.value });\n\n    e.target.reset();\n  };\n  return (\n    <div pd=\"16\">\n      <form onSubmit={searchHandler}>\n        <input type=\"text\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies &&\n          movies.map(movie => (\n            <li key={movie.id}>\n              <NavLink\n                to={`/movies/${movie.id.toString()}`}\n                state={{ from: location }}\n              >\n                {movie.title}\n              </NavLink>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetch","method","headers","accept","Authorization","then","response","json","results","catch","err","console","error","pd","onSubmit","e","preventDefault","target","search","value","reset","type","name","map","movie","to","id","toString","state","from","title"],"sourceRoot":""}